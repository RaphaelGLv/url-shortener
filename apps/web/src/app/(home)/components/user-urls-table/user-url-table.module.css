.wrapper {
  width: 100%;
}

/* Grid container */
.grid {
  display: grid;
  gap: 0; /* internal gaps handled by borders */
  border: 1px solid var(--grey);
  border-radius: 10px;
  font-size: var(--text-md);
}

/* Each row is a grid with three columns */
.row {
  position: relative;
  overflow: visible;

  display: grid;
  grid-template-columns: 1fr 1fr 220px;
  align-items: center;

  &.expired {
    text-decoration: line-through;
    background-color: rgba(255, 0, 0, 0.05);
  }

  &:hover .deleteBtn,
  & > .deleteBtn:focus {
    opacity: 1;
    right: -2rem;

    /* So the user can hover the button with ease */
    padding-left: 1rem;

    pointer-events: auto;
  }
}

.deleteBtn {
    position: absolute;
    right: 0;
    opacity: 0;
    pointer-events: none;

    z-index: 998;
}

.header {
  background: rgba(255, 255, 255, 0.02);
  font-weight: 600;
}

.cell {
  height: 100%;
  align-content: center;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.04);
  border-right: 1px solid rgba(255, 255, 255, 0.02);
  min-width: 0;
}

/* Remove right border from last cell in row */
.cell:last-child {
  border-right: none;
}

.urlCell {
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 0;

  &:hover .copyBtn {
    opacity: 1;
    translate: 0 4px;
    pointer-events: auto;
  }
}

.copyBtn {
  position: absolute;
  right: 0.5rem;
  opacity: 0;
  /* Fine tune positioning at y */
  translate: 6px 4px;
  transition: opacity 120ms ease, translate 120ms ease;
  pointer-events: none;
}

.link {
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: inline-block;
}


@media (max-width: 800px) {
  .row {
    grid-template-columns: 1fr 1fr 1fr;
  }
  .cell {
    padding: 10px 12px;
  }
}
